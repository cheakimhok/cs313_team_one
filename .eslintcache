[{"/Users/cheakimhokmao/Documents/cs313_team_one/src/index.js":"1","/Users/cheakimhokmao/Documents/cs313_team_one/src/App.js":"2","/Users/cheakimhokmao/Documents/cs313_team_one/src/reportWebVitals.js":"3","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/Main.js":"4","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/SignIn.js":"5","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/SignUp.js":"6","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/ConfirmEmail.js":"7","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/ConfirmPassword.js":"8","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/UnitConverter.js":"9","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/ScientificCalculator.js":"10","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/Header.js":"11","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/randomizer/App.js":"12","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/randomizer/InformationRandomizer.js":"13","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/services/UrlService.js":"14","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/component/App.js":"15","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/SideMenu.js":"16","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/randomizer/Body.js":"17","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/randomizer/Nav.js":"18","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/component/ButtonPanel.js":"19","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/component/Display.js":"20","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/logic/calculate.js":"21","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/component/Button.js":"22","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/logic/operate.js":"23","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/logic/isNumber.js":"24"},{"size":603,"mtime":1614703352042,"results":"25","hashOfConfig":"26"},{"size":290,"mtime":1614703352036,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1614703352042,"results":"28","hashOfConfig":"26"},{"size":2819,"mtime":1614706519084,"results":"29","hashOfConfig":"26"},{"size":6642,"mtime":1614703352038,"results":"30","hashOfConfig":"26"},{"size":7622,"mtime":1614703352038,"results":"31","hashOfConfig":"26"},{"size":4216,"mtime":1614703352036,"results":"32","hashOfConfig":"26"},{"size":5670,"mtime":1614703352037,"results":"33","hashOfConfig":"26"},{"size":28328,"mtime":1614706277585,"results":"34","hashOfConfig":"26"},{"size":43248,"mtime":1614707564435,"results":"35","hashOfConfig":"26"},{"size":2604,"mtime":1614703352037,"results":"36","hashOfConfig":"26"},{"size":4651,"mtime":1614703352040,"results":"37","hashOfConfig":"26"},{"size":5341,"mtime":1614703352041,"results":"38","hashOfConfig":"26"},{"size":1388,"mtime":1614703352041,"results":"39","hashOfConfig":"26"},{"size":1973,"mtime":1614703352039,"results":"40","hashOfConfig":"26"},{"size":591,"mtime":1614703352038,"results":"41","hashOfConfig":"26"},{"size":3987,"mtime":1614703352041,"results":"42","hashOfConfig":"26"},{"size":1481,"mtime":1614703352041,"results":"43","hashOfConfig":"26"},{"size":2021,"mtime":1614703352039,"results":"44","hashOfConfig":"26"},{"size":369,"mtime":1614703352040,"results":"45","hashOfConfig":"26"},{"size":3418,"mtime":1614703352040,"results":"46","hashOfConfig":"26"},{"size":711,"mtime":1614703352039,"results":"47","hashOfConfig":"26"},{"size":809,"mtime":1614703352040,"results":"48","hashOfConfig":"26"},{"size":74,"mtime":1614703352040,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h03hve",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"/Users/cheakimhokmao/Documents/cs313_team_one/src/index.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/App.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/reportWebVitals.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/Main.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/SignIn.js",["105","106"],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/SignUp.js",["107","108"],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/ConfirmEmail.js",["109","110","111"],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/ConfirmPassword.js",["112","113","114"],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/UnitConverter.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/ScientificCalculator.js",["115"],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/Header.js",["116"],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/randomizer/App.js",["117","118","119"],"import react, { Component } from 'react';\nimport Nav from './Nav';\nimport Body from './Body';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport './App.css';\nimport axios from 'axios';\nimport UrlService from '../services/UrlService';\nimport { Redirect } from 'react-router';\nimport SaveIcon from '@material-ui/icons/Save';\n\nexport default class randomizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            result: [],\n            activeRandomizer: 1,\n            qty: 0,\n            tGenerator: false,\n            customList: false,\n        };\n        this.handleSelectConverter = this.handleSelectConverter.bind(this);\n    }\n\n    handleSelectConverter(con) {\n        this.setState({\n            activeRandomizer: this.handleType(con),\n        });\n    }\n\n    setResult(result) {\n        this.setState({\n            result: result,\n        });\n    }\n\n    handleGetQty = (qty) => {\n        this.setState({\n            qty: qty,\n        });\n    };\n\n    handleGetData = (items) => {\n        this.setState({\n            items,\n        });\n        axios\n            .post(UrlService.handleRandomizer(), {\n                type: this.state.activeRandomizer,\n                data: { items, qty: this.state.qty },\n            })\n            .then((res) => {\n                console.log(res);\n                this.setResult(res.data.result);\n                console.log(this.state.result);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    handleSave = () => {\n        let data = {};\n        if (this.state.tGenerator) {\n            data = {\n                type: this.state.activeRandomizer,\n                data: {\n                    items: this.state.items,\n                    qty: this.state.activeRandomizer,\n                    result: this.state.result,\n                },\n            };\n        } else {\n            data = {\n                type: this.state.activeRandomizer,\n                data: { items: this.state.items, result: this.state.result },\n            };\n        }\n        console.log(data);\n\n        axios\n            .post(UrlService.SaveRandomizer(), data)\n            .then((res) => {\n                alert(res.data.message);\n            })\n            .catch((err) => {\n                alert(err.response.data.message);\n            });\n    };\n\n    handleType = (data) => {\n        let type = null;\n        this.setState({ tGenerator: false, customList: false, result: [], items: [] });\n        switch (data) {\n            case 'Random Picker':\n                type = 1;\n                break;\n            case 'Custom List':\n                type = 2;\n                this.setState({\n                    customList: true,\n                });\n                break;\n            case 'Decision Maker':\n                type = 3;\n                break;\n            case 'Name Picker':\n                type = 4;\n                break;\n            case 'Team Generator':\n                type = 5;\n                this.setState({\n                    tGenerator: true,\n                });\n                break;\n            case 'Yes or No':\n                type = 6;\n                break;\n            default:\n                break;\n        }\n        return type;\n    };\n\n    render() {\n        if (!this.props.user) {\n            return <Redirect to='/SignIn' />;\n        }\n        return (\n            <div className=\"randomizer-dev\">\n                <Row className='justify-content-end m-2'>\n                    <Button\n                        variant='contained'\n                        size='meddium'\n                        onClick={this.handleSave}\n                        startIcon={<SaveIcon />}\n                        style={{ margin: '20px 5px', outline: 'none' }}\n                    >\n                        Save\n                    </Button>\n                </Row>\n                <div className='randomizer'>\n                    <Row>\n                        <Nav onSelectRandomizer={this.handleSelectConverter} />\n                        <Body\n                            onGetData={this.handleGetData}\n                            teamGenerator={this.state.tGenerator}\n                            customListItem={this.state.customList}\n                            getResult={this.state.result}\n                            onGetQty={this.handleGetQty}\n                            getType={this.state.activeRandomizer}\n                        />\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\n",["120","121"],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/randomizer/InformationRandomizer.js",["122"],"import React, { useEffect } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport UrlService from '../services/UrlService';\nimport Table from '@material-ui/core/Table';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\n\nexport default function InteractiveList() {\n    const [data, setData] = React.useState([]);\n\n    useEffect(() => {\n        axios\n            .get(UrlService.SaveRandomizerList())\n            .then((res) => {\n                setData(res.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    const handleExport = () => {\n\n        axios\n            .get(UrlService.ExportUrl(), {\n                responseType: \"blob\",\n            })\n            .then((response) => {\n                const fileURL = window.URL.createObjectURL(new Blob([response.data]));\n                const fileLink = document.createElement(\"a\");\n\n                fileLink.href = fileURL;\n                fileLink.setAttribute(\"download\", \"random.xls\");\n                document.body.appendChild(fileLink);\n\n                fileLink.click();\n            });\n    };\n    return (\n        <div style={{ margin: '50px' }}>\n            <Grid container justify='center'>\n                <Grid item xs={8}>\n                    <Typography variant='h6'>Randomizer Infromation</Typography>\n                    <Grid>\n                        <Table size='small' aria-label='a dense table'>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>#</TableCell>\n                                    <TableCell align='right'>Type</TableCell>\n                                    <TableCell align='right'>Items</TableCell>\n                                    <TableCell align='right'>Result</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((item, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell component='th' scope='row'>\n                                            {index + 1}\n                                        </TableCell>\n                                        <TableCell align='right'>{item.type}</TableCell>\n                                        <TableCell align='right'>\n                                            {item.data.items.join(' | ')}\n                                        </TableCell>\n                                        <TableCell align='right'>\n                                            {item.data.result.join(' | ')}\n                                        </TableCell>\n                                        {/*<TableCell align=\"right\">\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                onClick={handleDelete(item.id)}\n                                                startIcon={<DeleteIcon />}\n                                            >\n                                            </Button>\n                                        </TableCell>\n                                        */}\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </Grid>\n                </Grid>\n                <Grid style={{ margin: '30px' }}>\n                    <Button\n                        variant='contained'\n                        className='bg-secondary text-light'\n                        onClick={handleExport}\n                        startIcon={<ImportExportIcon />}\n                    ></Button>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n// <div className={classes.demo}>\n//     <List>\n//         {data.map((item, index) => (\n\n//             <ListItem>\n//                 <ListItemAvatar>\n//                     <Avatar>\n//                         <FolderIcon />\n//                     </Avatar>\n//                 </ListItemAvatar>\n//                 <ListItemText\n//                     secondary={secondary ? 'Secondary text' : null}\n//                 >{index + 1},  {item.data.items.join(\",\")}  {item.data.result}</ListItemText>\n//                 <ListItemText\n//                     secondary={secondary ? 'Secondary text' : null}\n//                 ></ListItemText>\n//                 <ListItemText\n\n//                 >{ }</ListItemText>\n//                 <ListItemSecondaryAction>\n//                     <IconButton edge=\"end\" aria-label=\"delete\">\n//                         <DeleteIcon />\n//                     </IconButton>\n//                 </ListItemSecondaryAction>\n//             </ListItem>\n//         ))}\n//     </List>\n// </div>\n","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/services/UrlService.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/component/App.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/SideMenu.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/randomizer/Body.js",["123","124","125"],"import React, { useLayoutEffect } from 'react';\nimport { Button, Row, Col, Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\n\nexport default class Body extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentTextareaValue: '',\n            qty: React.createRef(),\n            data: \"\",\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const a = this.state.data;\n        const b = a.split('\\n').filter((item) => item !== '');\n\n        if (this.props.teamGenerator) {\n            this.props.onGetQty(this.state.qty.current.value);\n            this.props.onGetData(b);\n        } else {\n            this.props.onGetData(b);\n        }\n        if (this.props.getType == 6) {\n            this.setState({\n                data: \"Yes\\nNo\"\n            })\n        }\n\n    }\n    handleChange(event) {\n        this.setState({ data: event.target.value });\n\n    }\n    render() {\n        let shows;\n        let teamGen;\n        let picker;\n        let customList;\n\n        if (this.props.teamGenerator) {\n            shows = (\n                <div className=\"justify-content-center\">\n                    <label className='txt-group justify-content-center'>Groups </label>\n                    <input type='number' ref={this.state.qty} className='input-qty' />\n                </div>\n            );\n\n            teamGen = (\n                <div className='result-body-teamgen'>\n                    {this.props.getResult.map((item, index) => (\n                        <ul key={index}>\n                            <h5>Team {index + 1}</h5>\n                            <li>{item.join(' /  ')}</li>\n                        </ul>\n                    ))}\n                </div>\n            );\n        }\n\n\n        picker = <div className='result-body'>{this.props.getResult}</div>;\n\n        customList = (\n            <div className='result-body-teamgen'>\n                {this.props.getResult.map((item, index) => (\n                    <ul key={index}>\n                        {index + 1}. {item}\n                    </ul>\n                ))}\n            </div>\n        );\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Row className='randomizer-body'>\n                    <Form.Group controlId='exampleForm.ControlTextarea1' className='result-item-nav'>\n                        <Form.Label>ITEMS :</Form.Label>\n                        <Form.Control\n                            as='textarea'\n                            rows={15}\n                            className='item-body'\n                            value={this.state.data}\n                            onChange={this.handleChange}\n                        // ref={this.state.data}\n                        />\n                    </Form.Group>\n                    <Form.Group className='result-item-nav'>\n                        <Form.Label>RESULT : </Form.Label>\n                        {this.props.teamGenerator\n                            ? teamGen\n                            : this.props.customListItem\n                                ? customList\n                                : picker}\n                        {/*<Form.Control readOnly rows={15} value={this.props.getResult}></Form.Control>*/}\n                    </Form.Group>\n                </Row>\n                <Row className='justify-content-md-center body-sumbit'>\n                    <Col md='auto'>{shows}</Col>\n                    <Col md=' auto'>\n                        <Button\n                            as='input'\n                            type='submit'\n                            variant='secondary'\n                            value='Submit'\n                            className='submit'\n                        />{' '}\n                    </Col>\n                </Row>\n            </Form>\n        );\n    }\n}\n","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/randomizer/Nav.js",["126"],"import React from 'react'\nimport './App.css';\n\nconst Nav = (props) => {\n    const navMenu = [\n        'Random Picker',\n        'Custom List',\n        'Decision Maker',\n        'Name Picker',\n        'Team Generator',\n        'Yes or No',\n    ];\n    const [active, setActive] = React.useState(null);\n\n    const handleSelectRandomizer = (id, item) => {\n        setActive(id)\n        props.onSelectRandomizer(item)\n    };\n\n    let randomizer_nav = \"randomizer-nav\";\n    return (\n        <ul className='randomizer-navbar'>\n            {\n                navMenu.map((item, index) => (\n                    <li id=\"myDIV\" className={\n                        index === active ? \"active\" : \"randomizer-nav\"\n                    } onClick={() => handleSelectRandomizer(index, item)}>{item}</li>\n                ))\n            }\n        </ul>\n    );\n};\n\nexport default Nav;\n\n        // <li className='randomizer-nav active' onClick={() => handleSelectRandomizer('Custom List')} activeClass=\"active\">a</li>\n        // <li className='randomizer-nav' onClick={() => props.onSelectRandomizer('Decision Maker')} activeClass=\"active\">a</li>\n        // <li className='randomizer-nav' onClick={() => props.onSelectRandomizer('Name Picker')} activeClass=\"active\">a</li>\n        // <li className='randomizer-nav' onClick={() => props.onSelectRandomizer('Team Generator')} activeClass=\"active\">a</li>\n        // <li className='randomizer-nav' onClick={() => props.onSelectRandomizer('Yes or No')}>a</li>\n","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/component/ButtonPanel.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/component/Display.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/logic/calculate.js",["127","128"],"import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If the length is over 9 prevent input from the user \n\n    if (obj.next?.length > 9)\n      return;\n\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.total != 0) {\n      const result = parseFloat(obj.total) / 100;\n      return {\n        total: result,\n        next: parseFloat(obj.next) / 100,\n        operation: null\n\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === 'mc') {\n    return {\n      memory: null\n    };\n  }\n  if (buttonName === 'mr') {\n\n    return {\n\n      total: obj.memory\n    };\n  }\n  if (buttonName === 'm-') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: \"-\" + obj.next\n    };\n  }\n  if (buttonName === 'm+') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: obj.next\n    };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"-/+\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n\n\n\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/component/Button.js",[],"/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/logic/operate.js",["129"],"import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"÷\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\n  let temp = 0;\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"%\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"÷\") {\n    if (two == \"0\") {\n      \n      return \"error\";\n    } else {\n      temp = one.div(two).toFixed(3);\n      return temp.toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","/Users/cheakimhokmao/Documents/cs313_team_one/src/components/basicCal/logic/isNumber.js",[],{"ruleId":"130","severity":1,"message":"131","line":62,"column":63,"nodeType":"132","messageId":"133","endLine":62,"endColumn":64,"suggestions":"134"},{"ruleId":"130","severity":1,"message":"131","line":62,"column":79,"nodeType":"132","messageId":"133","endLine":62,"endColumn":80,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"131","line":58,"column":63,"nodeType":"132","messageId":"133","endLine":58,"endColumn":64,"suggestions":"136"},{"ruleId":"130","severity":1,"message":"131","line":58,"column":79,"nodeType":"132","messageId":"133","endLine":58,"endColumn":80,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":45,"column":63,"nodeType":"132","messageId":"133","endLine":45,"endColumn":64,"suggestions":"142"},{"ruleId":"130","severity":1,"message":"131","line":45,"column":79,"nodeType":"132","messageId":"133","endLine":45,"endColumn":80,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"144","line":1,"column":25,"nodeType":"140","messageId":"141","endLine":1,"endColumn":33},{"ruleId":"138","severity":1,"message":"145","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":258,"column":38,"nodeType":"148","messageId":"149","endLine":258,"endColumn":42},{"ruleId":"138","severity":1,"message":"150","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":14},{"ruleId":"138","severity":1,"message":"151","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"152","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":19},{"ruleId":"138","severity":1,"message":"153","line":4,"column":26,"nodeType":"140","messageId":"141","endLine":4,"endColumn":29},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"138","severity":1,"message":"139","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":14},{"ruleId":"138","severity":1,"message":"158","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":32},{"ruleId":"138","severity":1,"message":"159","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":28,"column":32,"nodeType":"162","messageId":"149","endLine":28,"endColumn":34},{"ruleId":"138","severity":1,"message":"163","line":20,"column":9,"nodeType":"140","messageId":"141","endLine":20,"endColumn":23},{"ruleId":"138","severity":1,"message":"164","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":11},{"ruleId":"160","severity":1,"message":"165","line":56,"column":19,"nodeType":"162","messageId":"149","endLine":56,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":20,"column":13,"nodeType":"162","messageId":"149","endLine":20,"endColumn":15},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["166","167"],["168","169"],["170","171"],["172","173"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["174","175"],["176","177"],"'useState' is defined but never used.","'BsFillEnvelopeFill' is defined but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'Avatar' is defined but never used.","'react' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"'useLayoutEffect' is defined but never used.","'useForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'randomizer_nav' is assigned a value but never used.","'Big' is defined but never used.","Expected '!==' and instead saw '!='.",{"messageId":"180","fix":"181","desc":"182"},{"messageId":"183","fix":"184","desc":"185"},{"messageId":"180","fix":"186","desc":"182"},{"messageId":"183","fix":"187","desc":"185"},{"messageId":"180","fix":"188","desc":"182"},{"messageId":"183","fix":"189","desc":"185"},{"messageId":"180","fix":"190","desc":"182"},{"messageId":"183","fix":"191","desc":"185"},{"messageId":"180","fix":"192","desc":"182"},{"messageId":"183","fix":"193","desc":"185"},{"messageId":"180","fix":"194","desc":"182"},{"messageId":"183","fix":"195","desc":"185"},"no-global-assign","no-unsafe-negation","removeEscape",{"range":"196","text":"197"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"198","text":"199"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"200","text":"197"},{"range":"201","text":"199"},{"range":"202","text":"197"},{"range":"203","text":"199"},{"range":"204","text":"197"},{"range":"205","text":"199"},{"range":"206","text":"197"},{"range":"207","text":"199"},{"range":"208","text":"197"},{"range":"209","text":"199"},[2284,2285],"",[2284,2284],"\\",[2300,2301],[2300,2300],[2275,2276],[2275,2275],[2291,2292],[2291,2291],[1946,1947],[1946,1946],[1962,1963],[1962,1962]]
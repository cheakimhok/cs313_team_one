[{"/Users/cheakimhokmao/cs313-team-one/src/index.js":"1","/Users/cheakimhokmao/cs313-team-one/src/App.js":"2","/Users/cheakimhokmao/cs313-team-one/src/components/Main.js":"3","/Users/cheakimhokmao/cs313-team-one/src/components/Header.js":"4","/Users/cheakimhokmao/cs313-team-one/src/components/SignUp.js":"5","/Users/cheakimhokmao/cs313-team-one/src/components/SignIn.js":"6","/Users/cheakimhokmao/cs313-team-one/src/components/SideMenu.js":"7","/Users/cheakimhokmao/cs313-team-one/src/reportWebVitals.js":"8","/Users/cheakimhokmao/cs313-team-one/src/components/ConfirmEmail.js":"9","/Users/cheakimhokmao/cs313-team-one/src/components/ConfirmPassword.js":"10"},{"size":478,"mtime":1611977377542,"results":"11","hashOfConfig":"12"},{"size":350,"mtime":1611977280110,"results":"13","hashOfConfig":"12"},{"size":702,"mtime":1612082545888,"results":"14","hashOfConfig":"12"},{"size":1800,"mtime":1611474784321,"results":"15","hashOfConfig":"12"},{"size":7021,"mtime":1612081375528,"results":"16","hashOfConfig":"12"},{"size":5968,"mtime":1612081966816,"results":"17","hashOfConfig":"12"},{"size":482,"mtime":1611583406952,"results":"18","hashOfConfig":"12"},{"size":362,"mtime":1610813303717,"results":"19","hashOfConfig":"12"},{"size":3964,"mtime":1612084116676,"results":"20","hashOfConfig":"12"},{"size":6707,"mtime":1612083968356,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9lrum",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/Users/cheakimhokmao/cs313-team-one/src/index.js",[],["46","47"],"/Users/cheakimhokmao/cs313-team-one/src/App.js",[],"/Users/cheakimhokmao/cs313-team-one/src/components/Main.js",[],"/Users/cheakimhokmao/cs313-team-one/src/components/Header.js",[],"/Users/cheakimhokmao/cs313-team-one/src/components/SignUp.js",["48","49"],"import React, { useRef } from 'react';\nimport './Authentication.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nconst SignUp = () => {\n    const { register, handleSubmit, errors, watch } = useForm({\n        criteriaMode: 'all',\n    });\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    const password = useRef({});\n    password.current = watch('password', '');\n\n    return (\n        <>\n            <Container id='sign-up'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Sign Up</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Create Your Free Account</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    {errors.email && <p style={{ color: 'red' }}>{errors.email.message}</p>}\n\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        name='password'\n                                        type='password'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            minLength: {\n                                                value: 8,\n                                                message: 'Password must have at least 8 characters',\n                                            },\n                                            maxLength: {\n                                                value: 20,\n                                                message: 'Password must have less than 20 characters',\n                                            },\n                                        })}\n                                        required\n                                        placeholder='Enter password'\n                                    />\n                                    {errors.password && (\n                                        <p style={{ color: 'red' }}>{errors.password.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center mb-3'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Confirm Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        required\n                                        placeholder='Confirm Password'\n                                        name='password_repeat'\n                                        type='password'\n                                        ref={register({\n                                            validate: (value) =>\n                                                value === password.current || 'The passwords do not match',\n                                        })}\n                                    />\n                                    {errors.password_repeat && (\n                                        <p style={{ color: 'red' }}>{errors.password_repeat.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            Already have an account?\n                            <Link\n                                to='/signin'\n                                style={{\n                                    color: '#52616b',\n                                    fontWeight: '600px',\n                                    marginLeft: '5px',\n                                    textDecoration: 'none',\n                                }}>\n                                Sign In\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='sign-button' variant='white' type='submit'>\n                                Sign Up\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default SignUp;","/Users/cheakimhokmao/cs313-team-one/src/components/SignIn.js",["50","51"],"import React from 'react';\nimport './Authentication.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Link } from 'react-router-dom';\n\nconst SignIn = () => {\n    const { register, handleSubmit, errors } = useForm({\n        criteriaMode: 'all',\n    });\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    return (\n        <>\n            <Container id='sign-in'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Sign In</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Let's Get Started</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicEmail'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    <ErrorMessage\n                                        errors={errors}\n                                        name='email'\n                                        render={({ messages }) => {\n                                            return messages\n                                                ? Object.entries(messages).map(([type, message]) => (\n                                                      <p style={{ color: 'red' }} key={type}>\n                                                          {message}\n                                                      </p>\n                                                  ))\n                                                : null;\n                                        }}\n                                    />\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicPassword'>\n                                <Form.Label className='form-label'>Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        className='from-control'\n                                        type='password'\n                                        placeholder='Enter Password'\n                                        required\n                                    />\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4 mt-3'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Link\n                                to='/ConfirmEmail'\n                                style={{\n                                    fontSize: '800',\n                                    color: '#52616b',\n                                    marginLeft: '6px',\n                                    textDecoration: 'none',\n                                }}>\n                                Forgot Password?\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4 mt-3'>\n                        <Col style={{ textAlign: 'center' }}>\n                            Don't have an account yet?\n                            <Link\n                                to='/signup'\n                                style={{\n                                    fontSize: '800',\n                                    color: '#52616b',\n                                    marginLeft: '5px',\n                                    textDecoration: 'none',\n                                }}>\n                                Sign Up\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='sign-button' variant='white' type='submit'>\n                                Sign In\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default SignIn;","/Users/cheakimhokmao/cs313-team-one/src/components/SideMenu.js",[],"/Users/cheakimhokmao/cs313-team-one/src/reportWebVitals.js",[],"/Users/cheakimhokmao/cs313-team-one/src/components/ConfirmEmail.js",["52","53","54"],"/Users/cheakimhokmao/cs313-team-one/src/components/ConfirmPassword.js",["55","56","57"],"import React, { useRef } from 'react';\nimport './Authentication.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nconst ConfirmPassword = () => {\n    const { register, handleSubmit, errors, watch } = useForm({\n        criteriaMode: 'all',\n    });\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    const password = useRef({});\n    password.current = watch('password', '');\n\n    return (\n        <>\n            <Container id='confirm-password'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Reset Password</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Please enter your new password</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    {errors.email && (\n                                        <p style={{ color: 'red' }}>{errors.email.message}</p>\n                                    )}\n\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>New Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        name='password'\n                                        type='password'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            minLength: {\n                                                value: 8,\n                                                message: 'Password must have at least 8 characters',\n                                            },\n                                            maxLength: {\n                                                value: 20,\n                                                message:\n                                                    'Password must have less than 20 characters',\n                                            },\n                                        })}\n                                        required\n                                        placeholder='Enter password'\n                                    />\n                                    {errors.password && (\n                                        <p style={{ color: 'red' }}>{errors.password.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center mb-3'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Confirm Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        required\n                                        placeholder='Confirm Password'\n                                        name='password_repeat'\n                                        type='password'\n                                        ref={register({\n                                            validate: (value) =>\n                                                value === password.current ||\n                                                'The passwords do not match',\n                                        })}\n                                    />\n                                    {errors.password_repeat && (\n                                        <p style={{ color: 'red' }}>\n                                            {errors.password_repeat.message}\n                                        </p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <br></br>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='confirm-password-button' variant='white' type='submit'>\n                                Reset Password\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default ConfirmPassword;\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":40,"column":63,"nodeType":"64","messageId":"65","endLine":40,"endColumn":64,"suggestions":"66"},{"ruleId":"62","severity":1,"message":"63","line":40,"column":79,"nodeType":"64","messageId":"65","endLine":40,"endColumn":80,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"63","line":38,"column":63,"nodeType":"64","messageId":"65","endLine":38,"endColumn":64,"suggestions":"68"},{"ruleId":"62","severity":1,"message":"63","line":38,"column":79,"nodeType":"64","messageId":"65","endLine":38,"endColumn":80,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":10,"nodeType":"72","messageId":"73","endLine":7,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":38,"column":63,"nodeType":"64","messageId":"65","endLine":38,"endColumn":64,"suggestions":"74"},{"ruleId":"62","severity":1,"message":"63","line":38,"column":79,"nodeType":"64","messageId":"65","endLine":38,"endColumn":80,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"71","line":6,"column":10,"nodeType":"72","messageId":"73","endLine":6,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":40,"column":63,"nodeType":"64","messageId":"65","endLine":40,"endColumn":64,"suggestions":"76"},{"ruleId":"62","severity":1,"message":"63","line":40,"column":79,"nodeType":"64","messageId":"65","endLine":40,"endColumn":80,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["80","81"],["82","83"],["84","85"],["86","87"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["88","89"],["90","91"],["92","93"],["94","95"],"no-global-assign","no-unsafe-negation",{"messageId":"96","fix":"97","desc":"98"},{"messageId":"99","fix":"100","desc":"101"},{"messageId":"96","fix":"102","desc":"98"},{"messageId":"99","fix":"103","desc":"101"},{"messageId":"96","fix":"104","desc":"98"},{"messageId":"99","fix":"105","desc":"101"},{"messageId":"96","fix":"106","desc":"98"},{"messageId":"99","fix":"107","desc":"101"},{"messageId":"96","fix":"108","desc":"98"},{"messageId":"99","fix":"109","desc":"101"},{"messageId":"96","fix":"110","desc":"98"},{"messageId":"99","fix":"111","desc":"101"},{"messageId":"96","fix":"112","desc":"98"},{"messageId":"99","fix":"113","desc":"101"},{"messageId":"96","fix":"114","desc":"98"},{"messageId":"99","fix":"115","desc":"101"},"removeEscape",{"range":"116","text":"117"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"118","text":"119"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"120","text":"117"},{"range":"121","text":"119"},{"range":"122","text":"117"},{"range":"123","text":"119"},{"range":"124","text":"117"},{"range":"125","text":"119"},{"range":"126","text":"117"},{"range":"127","text":"119"},{"range":"128","text":"117"},{"range":"129","text":"119"},{"range":"130","text":"117"},{"range":"131","text":"119"},{"range":"132","text":"117"},{"range":"133","text":"119"},[1692,1693],"",[1692,1692],"\\",[1708,1709],[1708,1708],[1669,1670],[1669,1669],[1685,1686],[1685,1685],[1682,1683],[1682,1682],[1698,1699],[1698,1698],[1723,1724],[1723,1723],[1739,1740],[1739,1739]]
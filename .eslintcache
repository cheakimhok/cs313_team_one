[{"/Users/venxinglay/Desktop/cs313_team_one/src/index.js":"1","/Users/venxinglay/Desktop/cs313_team_one/src/reportWebVitals.js":"2","/Users/venxinglay/Desktop/cs313_team_one/src/components/Header.js":"3","/Users/venxinglay/Desktop/cs313_team_one/src/App.js":"4","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/ButtonPanel.js":"5","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/calculate.js":"6","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/operate.js":"7","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/isNumber.js":"8","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Button.js":"9","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Display.js":"10"},{"size":168,"mtime":1610988060846,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610899975235,"results":"13","hashOfConfig":"12"},{"size":350,"mtime":1610900053261,"results":"14","hashOfConfig":"12"},{"size":1957,"mtime":1611856747717,"results":"15","hashOfConfig":"12"},{"size":2057,"mtime":1611466329551,"results":"16","hashOfConfig":"12"},{"size":3433,"mtime":1611630009354,"results":"17","hashOfConfig":"12"},{"size":833,"mtime":1610990793594,"results":"18","hashOfConfig":"12"},{"size":76,"mtime":1610987596788,"results":"19","hashOfConfig":"12"},{"size":734,"mtime":1610987637493,"results":"20","hashOfConfig":"12"},{"size":356,"mtime":1610987637497,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b9ztk1",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/venxinglay/Desktop/cs313_team_one/src/index.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/reportWebVitals.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/Header.js",[],["44","45"],"/Users/venxinglay/Desktop/cs313_team_one/src/App.js",["46"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/ButtonPanel.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/calculate.js",["47","48"],"import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    \n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If the length is over 9 prevent input from the user \n\n    if(obj.next?.length > 9)\n      return;\n      \n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n  \n  if (buttonName === \"%\") {\n    if (obj.total != 0) {\n      const result = parseFloat(obj.total)/100;\n      return {\n        total: result,\n        next: parseFloat(obj.next)/100,\n        operation: null\n        \n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \",\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n  if (buttonName === 'mc') {\n    return {\n      memory: null\n    };\n  }\n  if (buttonName === 'mr') {\n    return {\n      next: obj.memory\n    };\n  }\n  if (buttonName === 'm-') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: \"-\" + obj.next\n    };\n  }\n  if (buttonName === 'm+') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: obj.next\n    };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"-/+\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n  \n\n\n  \n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/operate.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/isNumber.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Button.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Display.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":10,"nodeType":"55","messageId":"56","endLine":7,"endColumn":16},{"ruleId":"53","severity":1,"message":"57","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":11},{"ruleId":"58","severity":1,"message":"59","line":56,"column":19,"nodeType":"60","messageId":"61","endLine":56,"endColumn":21},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'object' is defined but never used.","Identifier","unusedVar","'Big' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
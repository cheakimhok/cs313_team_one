[{"/Users/venxinglay/Desktop/cs313_team_one/src/index.js":"1","/Users/venxinglay/Desktop/cs313_team_one/src/App.js":"2","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/App.js":"3","/Users/venxinglay/Desktop/cs313_team_one/src/components/Main.js":"4","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Display.js":"5","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/ButtonPanel.js":"6","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/calculate.js":"7","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Button.js":"8","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/operate.js":"9","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/isNumber.js":"10","/Users/venxinglay/Desktop/cs313_team_one/src/components/Header.js":"11","/Users/venxinglay/Desktop/cs313_team_one/src/components/SignIn.js":"12","/Users/venxinglay/Desktop/cs313_team_one/src/components/SignUp.js":"13","/Users/venxinglay/Desktop/cs313_team_one/src/components/SideMenu.js":"14","/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/App.js":"15","/Users/venxinglay/Desktop/cs313_team_one/src/components/services/AuthService.js":"16","/Users/venxinglay/Desktop/cs313_team_one/src/components/services/CookieService.js":"17","/Users/venxinglay/Desktop/cs313_team_one/src/components/services/UrlService.js":"18"},{"size":274,"mtime":1612447692934,"results":"19","hashOfConfig":"20"},{"size":404,"mtime":1612431464013,"results":"21","hashOfConfig":"20"},{"size":1746,"mtime":1612171851963,"results":"22","hashOfConfig":"20"},{"size":1760,"mtime":1612558220100,"results":"23","hashOfConfig":"20"},{"size":356,"mtime":1610987637497,"results":"24","hashOfConfig":"20"},{"size":2057,"mtime":1612262639494,"results":"25","hashOfConfig":"20"},{"size":3433,"mtime":1612262677101,"results":"26","hashOfConfig":"20"},{"size":745,"mtime":1611978407894,"results":"27","hashOfConfig":"20"},{"size":809,"mtime":1611976901974,"results":"28","hashOfConfig":"20"},{"size":76,"mtime":1610987596788,"results":"29","hashOfConfig":"20"},{"size":5190,"mtime":1612449938274,"results":"30","hashOfConfig":"20"},{"size":6098,"mtime":1612449135898,"results":"31","hashOfConfig":"20"},{"size":7660,"mtime":1612464091970,"results":"32","hashOfConfig":"20"},{"size":486,"mtime":1612464384281,"results":"33","hashOfConfig":"20"},{"size":323,"mtime":1612559276497,"results":"34","hashOfConfig":"20"},{"size":969,"mtime":1612461408787,"results":"35","hashOfConfig":"20"},{"size":331,"mtime":1612439932537,"results":"36","hashOfConfig":"20"},{"size":1017,"mtime":1612557741563,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"b9ztk1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/venxinglay/Desktop/cs313_team_one/src/index.js",[],["81","82"],"/Users/venxinglay/Desktop/cs313_team_one/src/App.js",["83"],"import './App.css';\nimport React from \"react\";\nimport Main from './components/Main';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\n\n\n\nimport { render } from '@testing-library/react';\n\nexport default class App extends React.Component {\n  render(){\n    return (\n        <Router>\n            <div className='App'>\n                <Main />\n            </div>\n        </Router>\n    );\n  }\n}\n\n\n","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/App.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/Main.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Display.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/ButtonPanel.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/calculate.js",["84","85"],"import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    \n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If the length is over 9 prevent input from the user \n\n    if(obj.next?.length > 9)\n      return;\n      \n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n  \n  if (buttonName === \"%\") {\n    if (obj.total != 0) {\n      const result = parseFloat(obj.total)/100;\n      return {\n        total: result,\n        next: parseFloat(obj.next)/100,\n        operation: null\n        \n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n  if (buttonName === 'mc') {\n    return {\n      memory: null\n    };\n  }\n  if (buttonName === 'mr') {\n    return {\n      next: obj.memory\n    };\n  }\n  if (buttonName === 'm-') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: \"-\" + obj.next\n    };\n  }\n  if (buttonName === 'm+') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: obj.next\n    };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"-/+\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n  \n\n\n  \n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Button.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/operate.js",["86"],"import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"÷\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\n  let temp = 0;\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"%\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"÷\") {\n    if (two == \"0\") {\n      \n      return \"error\";\n    } else {\n      temp = one.div(two).toFixed(3);\n      return temp.toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n",["87","88"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/isNumber.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/Header.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/SignIn.js",["89","90","91","92","93"],"import React, { useState, Component } from 'react';\nimport '../App.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Link , Redirect  } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport AuthService from './services/AuthService'\n\n\n\n\n\n\n\nconst SignIn = (props) => {\n    const history = useHistory();\n    const { register, handleSubmit, errors } = useForm({\n        criteriaMode: 'all',\n    });\n\n\n\n    async function onSubmit(data) {\n\n        const response = await AuthService.doUserLogin(data);\n\n        if (response.message === 'Invalid Credentials') {\n            alert(\"Please check your credentials and try agian\");\n            localStorage.clear();\n          } else {\n            localStorage.setItem('access_token', response.access_token) \n            props.setUser(response.user);\n            history.push('/randomizer')\n          }\n    }\n\n    return (\n        <>\n            <Container id='sign-in'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Sign In</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Let's Get Started</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicEmail'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    <ErrorMessage\n                                        errors={errors}\n                                        name='email'\n                                        render={({ messages }) => {\n                                            return messages\n                                                ? Object.entries(messages).map(([type, message]) => (\n                                                      <p style={{ color: 'red' }} key={type}>\n                                                          {message}\n                                                      </p>\n                                                  ))\n                                                : null;\n                                        }}\n                                    />\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicPassword'>\n                                <Form.Label className='form-label'>Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        className='from-control'\n                                        type='password'\n                                        placeholder='Enter Password'\n                                        name='password'\n                                        ref={register({\n                                            required: 'This is required.'})}\n                                        required\n                                    />\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4 mt-3'>\n                        <Col style={{ textAlign: 'center' }}>\n                            Don't have an account yet?\n                            <Link\n                                to='/signup'\n                                style={{\n                                    fontSize: '800',\n                                    color: '#52616b',\n                                    marginLeft: '5px',\n                                    textDecoration: 'none',\n                                }}>\n                                Sign Up\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='sign-button' variant='white' type='submit'>\n                                Sign In\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default SignIn;","/Users/venxinglay/Desktop/cs313_team_one/src/components/SignUp.js",["94","95"],"import React, { useRef } from 'react';\n\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport UrlService from './services/UrlService';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst SignUp = (props) => {\n    const { register, handleSubmit, errors, watch } = useForm({\n        criteriaMode: 'all',\n    });\n\n    const history = useHistory();\n    const onSubmit = (data) => {\n\n        axios.post(UrlService.registerUrl(), data).then(\n            res => {\n                if(res.data.user) {\n                    localStorage.setItem('access_token', res.data.access_token);\n                    props.setUser(res.data.user);\n                    history.push('/randomizer')\n                } \n                \n            }\n        ).catch (\n            err => {\n                console.log(err)\n                alert(\"This gmail is already exist\")\n            }\n        )\n    }\n\n    const password = useRef({});\n    password.current = watch('password', '');\n\n    return (\n        <>\n            <Container id='sign-up'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Sign Up</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Create Your Free Account</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    {errors.email && <p style={{ color: 'red' }}>{errors.email.message}</p>}\n\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        name='password'\n                                        type='password'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            minLength: {\n                                                value: 8,\n                                                message: 'Password must have at least 8 characters',\n                                            },\n                                            maxLength: {\n                                                value: 20,\n                                                message: 'Password must have less than 20 characters',\n                                            },\n                                        })}\n                                        required\n                                        placeholder='Enter password'\n                                    />\n                                    {errors.password && (\n                                        <p style={{ color: 'red' }}>{errors.password.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center mb-3'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Confirm Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        required\n                                        placeholder='Confirm Password'\n                                        name='password_confirmation'\n                                        type='password'\n                                        ref={register({\n                                            validate: (value) =>\n                                                value === password.current || 'The passwords do not match',\n                                        })}\n                                    />\n                                    {errors.password_confirmation && (\n                                        <p style={{ color: 'red' }}>{errors.password_confirmation.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            Already have an account?\n                            <Link\n                                to='/signin'\n                                style={{\n                                    color: '#52616b',\n                                    fontWeight: '600px',\n                                    marginLeft: '5px',\n                                    textDecoration: 'none',\n                                }}>\n                                Sign In\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='sign-button' variant='white' type='submit'>\n                                Sign Up\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default SignUp;","/Users/venxinglay/Desktop/cs313_team_one/src/components/SideMenu.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/App.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/services/AuthService.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/services/CookieService.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/services/UrlService.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":10,"column":10,"nodeType":"102","messageId":"103","endLine":10,"endColumn":16},{"ruleId":"100","severity":1,"message":"104","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":11},{"ruleId":"105","severity":1,"message":"106","line":56,"column":19,"nodeType":"107","messageId":"108","endLine":56,"endColumn":21},{"ruleId":"105","severity":1,"message":"109","line":20,"column":13,"nodeType":"107","messageId":"108","endLine":20,"endColumn":15},{"ruleId":"96","replacedBy":"110"},{"ruleId":"98","replacedBy":"111"},{"ruleId":"100","severity":1,"message":"112","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"113","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"114","line":7,"column":17,"nodeType":"102","messageId":"103","endLine":7,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":59,"column":63,"nodeType":"117","messageId":"118","endLine":59,"endColumn":64,"suggestions":"119"},{"ruleId":"115","severity":1,"message":"116","line":59,"column":79,"nodeType":"117","messageId":"118","endLine":59,"endColumn":80,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"116","line":59,"column":63,"nodeType":"117","messageId":"118","endLine":59,"endColumn":64,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"116","line":59,"column":79,"nodeType":"117","messageId":"118","endLine":59,"endColumn":80,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Big' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["123"],["124"],"'useState' is defined but never used.","'Component' is defined but never used.","'Redirect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["125","126"],["127","128"],["129","130"],["131","132"],"no-global-assign","no-unsafe-negation",{"messageId":"133","fix":"134","desc":"135"},{"messageId":"136","fix":"137","desc":"138"},{"messageId":"133","fix":"139","desc":"135"},{"messageId":"136","fix":"140","desc":"138"},{"messageId":"133","fix":"141","desc":"135"},{"messageId":"136","fix":"142","desc":"138"},{"messageId":"133","fix":"143","desc":"135"},{"messageId":"136","fix":"144","desc":"138"},"removeEscape",{"range":"145","text":"146"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"147","text":"148"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"149","text":"146"},{"range":"150","text":"148"},{"range":"151","text":"146"},{"range":"152","text":"148"},{"range":"153","text":"146"},{"range":"154","text":"148"},[2247,2248],"",[2247,2247],"\\",[2263,2264],[2263,2263],[2313,2314],[2313,2313],[2329,2330],[2329,2329]]
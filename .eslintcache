[{"/Users/cheakimhokmao/cs313-team-one/src/index.js":"1","/Users/cheakimhokmao/cs313-team-one/src/App.js":"2","/Users/cheakimhokmao/cs313-team-one/src/reportWebVitals.js":"3","/Users/cheakimhokmao/cs313-team-one/src/components/Main.js":"4","/Users/cheakimhokmao/cs313-team-one/src/components/Header.js":"5","/Users/cheakimhokmao/cs313-team-one/src/components/SideMenu.js":"6","/Users/cheakimhokmao/cs313-team-one/src/components/SignIn.js":"7","/Users/cheakimhokmao/cs313-team-one/src/components/SignUp.js":"8"},{"size":478,"mtime":1610867509830,"results":"9","hashOfConfig":"10"},{"size":291,"mtime":1610872177884,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610813303717,"results":"12","hashOfConfig":"10"},{"size":527,"mtime":1611411440713,"results":"13","hashOfConfig":"10"},{"size":1800,"mtime":1611474784321,"results":"14","hashOfConfig":"10"},{"size":486,"mtime":1611411428643,"results":"15","hashOfConfig":"10"},{"size":5321,"mtime":1611411031265,"results":"16","hashOfConfig":"10"},{"size":7163,"mtime":1611554080584,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"9lrum",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/cheakimhokmao/cs313-team-one/src/index.js",[],["38","39"],"/Users/cheakimhokmao/cs313-team-one/src/App.js",[],"/Users/cheakimhokmao/cs313-team-one/src/reportWebVitals.js",[],"/Users/cheakimhokmao/cs313-team-one/src/components/Main.js",[],"/Users/cheakimhokmao/cs313-team-one/src/components/Header.js",[],"/Users/cheakimhokmao/cs313-team-one/src/components/SideMenu.js",[],["40","41"],"/Users/cheakimhokmao/cs313-team-one/src/components/SignIn.js",["42","43"],"import React from 'react';\nimport '../App.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Link } from 'react-router-dom';\n\nconst SignIn = () => {\n    const { register, handleSubmit, errors } = useForm({\n        criteriaMode: 'all',\n    });\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    return (\n        <>\n            <Container id='sign-in'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Sign In</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Let's Get Started</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicEmail'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    <ErrorMessage\n                                        errors={errors}\n                                        name='email'\n                                        render={({ messages }) => {\n                                            return messages\n                                                ? Object.entries(messages).map(([type, message]) => (\n                                                      <p style={{ color: 'red' }} key={type}>\n                                                          {message}\n                                                      </p>\n                                                  ))\n                                                : null;\n                                        }}\n                                    />\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicPassword'>\n                                <Form.Label className='form-label'>Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        className='from-control'\n                                        type='password'\n                                        placeholder='Enter Password'\n                                        required\n                                    />\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4 mt-3'>\n                        <Col style={{ textAlign: 'center' }}>\n                            Don't have an account yet?\n                            <Link\n                                to='/signup'\n                                style={{\n                                    fontSize: '800',\n                                    color: '#52616b',\n                                    marginLeft: '5px',\n                                    textDecoration: 'none',\n                                }}>\n                                Sign Up\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='sign-button' variant='white' type='submit'>\n                                Sign In\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default SignIn;","/Users/cheakimhokmao/cs313-team-one/src/components/SignUp.js",["44","45","46","47","48","49","50","51"],"import React, { useRef } from 'react';\nimport '../App.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill, BsFillPersonLinesFill } from 'react-icons/bs';\nimport { FaFacebookSquare, FaTwitter, FaRedditSquare, FaBold } from 'react-icons/fa';\nimport { FcGoogle } from 'react-icons/fc';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nconst SignUp = () => {\n    const { register, handleSubmit, errors, watch } = useForm({\n        criteriaMode: 'all',\n    });\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    const password = useRef({});\n    password.current = watch('password', '');\n\n    return (\n        <>\n            <Container id='sign-up'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Sign Up</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Create Your Free Account</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    {errors.email && <p style={{ color: 'red' }}>{errors.email.message}</p>}\n\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        name='password'\n                                        type='password'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            minLength: {\n                                                value: 8,\n                                                message: 'Password must have at least 8 characters',\n                                            },\n                                            maxLength: {\n                                                value: 20,\n                                                message: 'Password must have less than 20 characters',\n                                            },\n                                        })}\n                                        required\n                                        placeholder='Enter password'\n                                    />\n                                    {errors.password && (\n                                        <p style={{ color: 'red' }}>{errors.password.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center mb-3'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Confirm Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        required\n                                        placeholder='Confirm Password'\n                                        name='password_repeat'\n                                        type='password'\n                                        ref={register({\n                                            validate: (value) =>\n                                                value === password.current || 'The passwords do not match',\n                                        })}\n                                    />\n                                    {errors.password_repeat && (\n                                        <p style={{ color: 'red' }}>{errors.password_repeat.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            Already have an account?\n                            <Link\n                                to='/signin'\n                                style={{\n                                    color: '#52616b',\n                                    fontWeight: '600px',\n                                    marginLeft: '5px',\n                                    textDecoration: 'none',\n                                }}>\n                                Sign In\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='sign-button' variant='white' type='submit'>\n                                Sign Up\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default SignUp;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":38,"column":63,"nodeType":"60","messageId":"61","endLine":38,"endColumn":64,"suggestions":"62"},{"ruleId":"58","severity":1,"message":"59","line":38,"column":79,"nodeType":"60","messageId":"61","endLine":38,"endColumn":80,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":42,"nodeType":"66","messageId":"67","endLine":4,"endColumn":63},{"ruleId":"64","severity":1,"message":"68","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":26},{"ruleId":"64","severity":1,"message":"69","line":5,"column":28,"nodeType":"66","messageId":"67","endLine":5,"endColumn":37},{"ruleId":"64","severity":1,"message":"70","line":5,"column":39,"nodeType":"66","messageId":"67","endLine":5,"endColumn":53},{"ruleId":"64","severity":1,"message":"71","line":5,"column":55,"nodeType":"66","messageId":"67","endLine":5,"endColumn":61},{"ruleId":"64","severity":1,"message":"72","line":6,"column":10,"nodeType":"66","messageId":"67","endLine":6,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":42,"column":63,"nodeType":"60","messageId":"61","endLine":42,"endColumn":64,"suggestions":"73"},{"ruleId":"58","severity":1,"message":"59","line":42,"column":79,"nodeType":"60","messageId":"61","endLine":42,"endColumn":80,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],["75"],["76"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["77","78"],["79","80"],"no-unused-vars","'BsFillPersonLinesFill' is defined but never used.","Identifier","unusedVar","'FaFacebookSquare' is defined but never used.","'FaTwitter' is defined but never used.","'FaRedditSquare' is defined but never used.","'FaBold' is defined but never used.","'FcGoogle' is defined but never used.",["81","82"],["83","84"],"no-global-assign","no-unsafe-negation",{"messageId":"85","fix":"86","desc":"87"},{"messageId":"88","fix":"89","desc":"90"},{"messageId":"85","fix":"91","desc":"87"},{"messageId":"88","fix":"92","desc":"90"},{"messageId":"85","fix":"93","desc":"87"},{"messageId":"88","fix":"94","desc":"90"},{"messageId":"85","fix":"95","desc":"87"},{"messageId":"88","fix":"96","desc":"90"},"removeEscape",{"range":"97","text":"98"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"99","text":"100"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"101","text":"98"},{"range":"102","text":"100"},{"range":"103","text":"98"},{"range":"104","text":"100"},{"range":"105","text":"98"},{"range":"106","text":"100"},[1659,1660],"",[1659,1659],"\\",[1675,1676],[1675,1675],[1834,1835],[1834,1834],[1850,1851],[1850,1850]]
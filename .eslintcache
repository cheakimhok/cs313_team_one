<<<<<<< HEAD
[{"/Users/venxinglay/Desktop/cs313_team_one/src/index.js":"1","/Users/venxinglay/Desktop/cs313_team_one/src/reportWebVitals.js":"2","/Users/venxinglay/Desktop/cs313_team_one/src/App.js":"3","/Users/venxinglay/Desktop/cs313_team_one/src/components/Main.js":"4","/Users/venxinglay/Desktop/cs313_team_one/src/components/ConfirmEmail.js":"5","/Users/venxinglay/Desktop/cs313_team_one/src/components/SignUp.js":"6","/Users/venxinglay/Desktop/cs313_team_one/src/components/SignIn.js":"7","/Users/venxinglay/Desktop/cs313_team_one/src/components/ConfirmPassword.js":"8","/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/App.js":"9","/Users/venxinglay/Desktop/cs313_team_one/src/components/Header.js":"10","/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/InformationRandomizer.js":"11","/Users/venxinglay/Desktop/cs313_team_one/src/components/services/UrlService.js":"12","/Users/venxinglay/Desktop/cs313_team_one/src/components/SideMenu.js":"13","/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/Nav.js":"14","/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/Body.js":"15","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/App.js":"16","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/ButtonPanel.js":"17","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/calculate.js":"18","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/operate.js":"19","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Button.js":"20","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/isNumber.js":"21","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Display.js":"22"},{"size":603,"mtime":1614354426320,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1610899975235,"results":"25","hashOfConfig":"24"},{"size":290,"mtime":1614354426301,"results":"26","hashOfConfig":"24"},{"size":2037,"mtime":1614354426307,"results":"27","hashOfConfig":"24"},{"size":4216,"mtime":1614354426303,"results":"28","hashOfConfig":"24"},{"size":7622,"mtime":1614354426310,"results":"29","hashOfConfig":"24"},{"size":6642,"mtime":1614354426309,"results":"30","hashOfConfig":"24"},{"size":5670,"mtime":1614354426304,"results":"31","hashOfConfig":"24"},{"size":4432,"mtime":1614354426314,"results":"32","hashOfConfig":"24"},{"size":2502,"mtime":1614354426305,"results":"33","hashOfConfig":"24"},{"size":5697,"mtime":1614354426316,"results":"34","hashOfConfig":"24"},{"size":1397,"mtime":1614354426319,"results":"35","hashOfConfig":"24"},{"size":591,"mtime":1614354426308,"results":"36","hashOfConfig":"24"},{"size":739,"mtime":1614354426317,"results":"37","hashOfConfig":"24"},{"size":3290,"mtime":1614354426315,"results":"38","hashOfConfig":"24"},{"size":1746,"mtime":1614354426310,"results":"39","hashOfConfig":"24"},{"size":2021,"mtime":1614354426312,"results":"40","hashOfConfig":"24"},{"size":3418,"mtime":1614347314317,"results":"41","hashOfConfig":"24"},{"size":809,"mtime":1614347314316,"results":"42","hashOfConfig":"24"},{"size":733,"mtime":1614354426311,"results":"43","hashOfConfig":"24"},{"size":74,"mtime":1614347314317,"results":"44","hashOfConfig":"24"},{"size":393,"mtime":1614354426313,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b9ztk1",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/venxinglay/Desktop/cs313_team_one/src/index.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/reportWebVitals.js",[],["94","95"],"/Users/venxinglay/Desktop/cs313_team_one/src/App.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/Main.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/ConfirmEmail.js",["96","97","98"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/SignUp.js",["99","100"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/SignIn.js",["101","102"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/ConfirmPassword.js",["103","104","105"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/App.js",["106","107","108"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/Header.js",["109"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/InformationRandomizer.js",["110"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/services/UrlService.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/SideMenu.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/Nav.js",["111","112","113","114","115","116","117"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/randomizer/Body.js",["118","119","120","121","122"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/App.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/ButtonPanel.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/calculate.js",["123","124"],"import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If the length is over 9 prevent input from the user \n\n    if (obj.next?.length > 9)\n      return;\n\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.total != 0) {\n      const result = parseFloat(obj.total) / 100;\n      return {\n        total: result,\n        next: parseFloat(obj.next) / 100,\n        operation: null\n\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === 'mc') {\n    return {\n      memory: null\n    };\n  }\n  if (buttonName === 'mr') {\n\n    return {\n\n      total: obj.memory\n    };\n  }\n  if (buttonName === 'm-') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: \"-\" + obj.next\n    };\n  }\n  if (buttonName === 'm+') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: obj.next\n    };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"-/+\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n\n\n\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/operate.js",["125"],"import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"÷\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\n  let temp = 0;\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"%\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"÷\") {\n    if (two == \"0\") {\n      \n      return \"error\";\n    } else {\n      temp = one.div(two).toFixed(3);\n      return temp.toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n",["126","127"],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Button.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/logic/isNumber.js",[],"/Users/venxinglay/Desktop/cs313_team_one/src/components/basicCal/component/Display.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":45,"column":63,"nodeType":"138","messageId":"139","endLine":45,"endColumn":64,"suggestions":"140"},{"ruleId":"136","severity":1,"message":"137","line":45,"column":79,"nodeType":"138","messageId":"139","endLine":45,"endColumn":80,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"137","line":58,"column":63,"nodeType":"138","messageId":"139","endLine":58,"endColumn":64,"suggestions":"142"},{"ruleId":"136","severity":1,"message":"137","line":58,"column":79,"nodeType":"138","messageId":"139","endLine":58,"endColumn":80,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"137","line":62,"column":63,"nodeType":"138","messageId":"139","endLine":62,"endColumn":64,"suggestions":"144"},{"ruleId":"136","severity":1,"message":"137","line":62,"column":79,"nodeType":"138","messageId":"139","endLine":62,"endColumn":80,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"146","line":1,"column":25,"nodeType":"134","messageId":"135","endLine":1,"endColumn":33},{"ruleId":"132","severity":1,"message":"147","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":14},{"ruleId":"132","severity":1,"message":"148","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"149","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":19},{"ruleId":"132","severity":1,"message":"150","line":4,"column":26,"nodeType":"134","messageId":"135","endLine":4,"endColumn":29},{"ruleId":"132","severity":1,"message":"151","line":8,"column":8,"nodeType":"134","messageId":"135","endLine":8,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":14},{"ruleId":"132","severity":1,"message":"152","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":21},{"ruleId":"132","severity":1,"message":"153","line":1,"column":23,"nodeType":"134","messageId":"135","endLine":1,"endColumn":38},{"ruleId":"132","severity":1,"message":"149","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":19},{"ruleId":"132","severity":1,"message":"150","line":2,"column":21,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"154","line":2,"column":31,"nodeType":"134","messageId":"135","endLine":2,"endColumn":40},{"ruleId":"132","severity":1,"message":"155","line":2,"column":42,"nodeType":"134","messageId":"135","endLine":2,"endColumn":45},{"ruleId":"132","severity":1,"message":"133","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"153","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":32},{"ruleId":"132","severity":1,"message":"156","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":32},{"ruleId":"132","severity":1,"message":"154","line":2,"column":34,"nodeType":"134","messageId":"135","endLine":2,"endColumn":43},{"ruleId":"132","severity":1,"message":"157","line":2,"column":45,"nodeType":"134","messageId":"135","endLine":2,"endColumn":58},{"ruleId":"132","severity":1,"message":"158","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":17},{"ruleId":"132","severity":1,"message":"159","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":11},{"ruleId":"160","severity":1,"message":"161","line":56,"column":19,"nodeType":"162","messageId":"163","endLine":56,"endColumn":21},{"ruleId":"160","severity":1,"message":"164","line":20,"column":13,"nodeType":"162","messageId":"163","endLine":20,"endColumn":15},{"ruleId":"128","replacedBy":"165"},{"ruleId":"130","replacedBy":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["169","170"],["171","172"],["173","174"],["175","176"],["177","178"],["179","180"],"'useState' is defined but never used.","'BsFillEnvelopeFill' is defined but never used.","'react' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Avatar' is defined but never used.","'useCallback' is defined but never used.","'useLayoutEffect' is defined but never used.","'ListGroup' is defined but never used.","'Tab' is defined but never used.","'Card' is defined but never used.","'ListGroupItem' is defined but never used.","'useForm' is defined but never used.","'Big' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["167"],["168"],"no-global-assign","no-unsafe-negation",{"messageId":"181","fix":"182","desc":"183"},{"messageId":"184","fix":"185","desc":"186"},{"messageId":"181","fix":"187","desc":"183"},{"messageId":"184","fix":"188","desc":"186"},{"messageId":"181","fix":"189","desc":"183"},{"messageId":"184","fix":"190","desc":"186"},{"messageId":"181","fix":"191","desc":"183"},{"messageId":"184","fix":"192","desc":"186"},{"messageId":"181","fix":"193","desc":"183"},{"messageId":"184","fix":"194","desc":"186"},{"messageId":"181","fix":"195","desc":"183"},{"messageId":"184","fix":"196","desc":"186"},"removeEscape",{"range":"197","text":"198"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"199","text":"200"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"201","text":"198"},{"range":"202","text":"200"},{"range":"203","text":"198"},{"range":"204","text":"200"},{"range":"205","text":"198"},{"range":"206","text":"200"},{"range":"207","text":"198"},{"range":"208","text":"200"},{"range":"209","text":"198"},{"range":"210","text":"200"},[1946,1947],"",[1946,1946],"\\",[1962,1963],[1962,1962],[2275,2276],[2275,2275],[2291,2292],[2291,2291],[2284,2285],[2284,2284],[2300,2301],[2300,2300]]
=======
[{"/Users/cheakimhokmao/Desktop/cs313_team_one/src/index.js":"1","/Users/cheakimhokmao/Desktop/cs313_team_one/src/App.js":"2","/Users/cheakimhokmao/Desktop/cs313_team_one/src/reportWebVitals.js":"3","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/Main.js":"4","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/SignUp.js":"5","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/SignIn.js":"6","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/Header.js":"7","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/ConfirmPassword.js":"8","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/ConfirmEmail.js":"9","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/services/UrlService.js":"10","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/randomizer/App.js":"11","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/randomizer/InformationRandomizer.js":"12","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/component/App.js":"13","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/SideMenu.js":"14","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/randomizer/Nav.js":"15","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/randomizer/Body.js":"16","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/component/ButtonPanel.js":"17","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/component/Display.js":"18","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/logic/calculate.js":"19","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/component/Button.js":"20","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/logic/operate.js":"21","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/logic/isNumber.js":"22"},{"size":603,"mtime":1614348941246,"results":"23","hashOfConfig":"24"},{"size":290,"mtime":1614348786065,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1614348786066,"results":"26","hashOfConfig":"24"},{"size":2035,"mtime":1614349920880,"results":"27","hashOfConfig":"24"},{"size":7622,"mtime":1614348941242,"results":"28","hashOfConfig":"24"},{"size":6642,"mtime":1614348941242,"results":"29","hashOfConfig":"24"},{"size":2604,"mtime":1614349143362,"results":"30","hashOfConfig":"24"},{"size":5670,"mtime":1614348941241,"results":"31","hashOfConfig":"24"},{"size":4216,"mtime":1614348941241,"results":"32","hashOfConfig":"24"},{"size":1397,"mtime":1614348941246,"results":"33","hashOfConfig":"24"},{"size":4613,"mtime":1614349547402,"results":"34","hashOfConfig":"24"},{"size":5384,"mtime":1614349590949,"results":"35","hashOfConfig":"24"},{"size":1919,"mtime":1614349453251,"results":"36","hashOfConfig":"24"},{"size":591,"mtime":1614348941242,"results":"37","hashOfConfig":"24"},{"size":836,"mtime":1614349614699,"results":"38","hashOfConfig":"24"},{"size":3611,"mtime":1614349679605,"results":"39","hashOfConfig":"24"},{"size":2021,"mtime":1614348941243,"results":"40","hashOfConfig":"24"},{"size":393,"mtime":1614348941244,"results":"41","hashOfConfig":"24"},{"size":3418,"mtime":1614348941244,"results":"42","hashOfConfig":"24"},{"size":733,"mtime":1614348941243,"results":"43","hashOfConfig":"24"},{"size":809,"mtime":1614348941244,"results":"44","hashOfConfig":"24"},{"size":74,"mtime":1614348941244,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"kv97co",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/cheakimhokmao/Desktop/cs313_team_one/src/index.js",[],["98","99"],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/App.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/reportWebVitals.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/Main.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/SignUp.js",["100","101"],"import React, { useRef } from 'react';\n\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport UrlService from './services/UrlService';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst SignUp = (props) => {\n    const { register, handleSubmit, errors, watch } = useForm({\n        criteriaMode: 'all',\n    });\n\n    const history = useHistory();\n    const onSubmit = (data) => {\n\n        axios.post(UrlService.registerUrl(), data).then(\n            res => {\n                if (res.data.user) {\n                    localStorage.setItem('access_token', res.data.access_token);\n                    props.setUser(res.data.user);\n                    history.push('/randomizer')\n                }\n\n            }\n        ).catch(\n            err => {\n                alert(err.response.data.errors.email.join(', '))\n            }\n        )\n    }\n\n    const password = useRef({});\n    password.current = watch('password', '');\n\n    return (\n        <>\n            <Container id='sign-up'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Sign Up</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Create Your Free Account</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    {errors.email && <p style={{ color: 'red' }}>{errors.email.message}</p>}\n\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        name='password'\n                                        type='password'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            minLength: {\n                                                value: 8,\n                                                message: 'Password must have at least 8 characters',\n                                            },\n                                            maxLength: {\n                                                value: 20,\n                                                message: 'Password must have less than 20 characters',\n                                            },\n                                        })}\n                                        required\n                                        placeholder='Enter password'\n                                    />\n                                    {errors.password && (\n                                        <p style={{ color: 'red' }}>{errors.password.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center mb-3'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Confirm Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        required\n                                        placeholder='Confirm Password'\n                                        name='password_confirmation'\n                                        type='password'\n                                        ref={register({\n                                            validate: (value) =>\n                                                value === password.current || 'The passwords do not match',\n                                        })}\n                                    />\n                                    {errors.password_confirmation && (\n                                        <p style={{ color: 'red' }}>{errors.password_confirmation.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            Already have an account?\n                            <Link\n                                to='/signin'\n                                style={{\n                                    color: '#52616b',\n                                    fontWeight: '600px',\n                                    marginLeft: '5px',\n                                    textDecoration: 'none',\n                                }}>\n                                Sign In\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='sign-button' variant='white' type='submit'>\n                                Sign Up\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default SignUp;","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/SignIn.js",["102","103"],"import '../App.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport UrlService from './services/UrlService'\nimport axios from \"axios\"\n\n\n\n\n\n\n\nconst SignIn = (props) => {\n    const history = useHistory();\n    const { register, handleSubmit, errors } = useForm({\n        criteriaMode: 'all',\n    });\n\n    //Handle Login\n    async function onSubmit(data) {\n        axios.post(UrlService.loginUrl(), data).then(\n            res => {\n                if (res.data.user) {\n                    localStorage.setItem('access_token', res.data.access_token);\n                    props.setUser(res.data.user);\n                    history.push('/randomizer')\n                }\n\n            }\n        ).catch(\n            err => {\n                console.log(err)\n                alert(err.response.data.message)\n            }\n        )\n    }\n\n    return (\n        <>\n            <Container id='sign-in'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Sign In</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Let's Get Started</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicEmail'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    <ErrorMessage\n                                        errors={errors}\n                                        name='email'\n                                        render={({ messages }) => {\n                                            return messages\n                                                ? Object.entries(messages).map(([type, message]) => (\n                                                    <p style={{ color: 'red' }} key={type}>\n                                                        {message}\n                                                    </p>\n                                                ))\n                                                : null;\n                                        }}\n                                    />\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicPassword'>\n                                <Form.Label className='form-label'>Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        className='from-control'\n                                        type='password'\n                                        placeholder='Enter Password'\n                                        name='password'\n                                        ref={register({\n                                            required: 'This is required.'\n                                        })}\n                                        required\n                                    />\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4 mt-3'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Link\n                                to='/password/forgot'\n                                style={{\n                                    fontSize: '800',\n                                }}>\n                                Forgotten Password?\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4 mt-3'>\n                        <Col style={{ textAlign: 'center' }}>\n                            Don't have an account yet?\n                            <Link\n                                to='/signup'\n                                style={{\n                                    fontSize: '800',\n                                    color: '#52616b',\n                                    marginLeft: '5px',\n                                    textDecoration: 'none',\n                                }}>\n                                Sign Up\n                            </Link>\n                        </Col>\n                    </Row>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='sign-button' variant='white' type='submit'>\n                                Sign In\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default SignIn;","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/Header.js",["104"],"import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { SideMenu } from '../components/SideMenu.js';\nimport './Authentication.css';\nimport { IconContext } from 'react-icons';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nfunction Header(props) {\n    const [sideMenu, setSideMenu] = useState(false);\n    const history = useHistory();\n    const showSideMenu = () => setSideMenu(!sideMenu);\n\n    const handleLogout = () => {\n        localStorage.clear();\n        props.setUser(null);\n        history.push('/signIn');\n    };\n    let shows;\n    if (props.user) {\n        shows = (\n            <div className='login-logout'>\n                <Link onClick={handleLogout} className='login'>\n                    Log out\n                </Link>\n            </div>\n        );\n    } else {\n        shows = (\n            <div className='login-logout'>\n                <Link to='/SignIn' className='login'>\n                    Log In\n                </Link>\n            </div>\n        );\n    }\n    return (\n        <div id='header'>\n            <IconContext.Provider value={{ color: '#52616b' }}>\n                <div className='navbar'>\n                    <Link to='#' className='menu-bars'>\n                        <FaIcons.FaBars onClick={showSideMenu} />\n                    </Link>\n                    <span class='navbar-brand h1'>CAL SMEi-TMEi</span>\n                    {shows}\n                </div>\n\n                <nav className={sideMenu ? 'nav-menu active' : 'nav-menu'}>\n                    <ul className='nav-menu-items' onClick={showSideMenu}>\n                        <li className='navbar-toggle'>\n                            <Link to='#' className='menu-close'>\n                                <AiIcons.AiOutlineClose />\n                            </Link>\n                        </li>\n                        {SideMenu.map((item, index) => {\n                            return (\n                                <li key={index} className={item.cName}>\n                                    <Link to={item.path}>\n                                        {item.icon}\n                                        <span>{item.title}</span>\n                                    </Link>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </nav>\n            </IconContext.Provider>\n        </div>\n    );\n}\n\nexport default Header;\n","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/ConfirmPassword.js",["105","106","107"],"import React, { useRef, useState } from 'react';\nimport './Authentication.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill, BsLockFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport UrlService from './services/UrlService';\n\nconst ConfirmPassword = (props) => {\n    const { register, handleSubmit, errors, watch } = useForm({\n        criteriaMode: 'all',\n        defaultValues: {\n            token: props.match.params.token,\n        }\n    });\n\n    // Handle Reset Password\n    const onSubmit = (data) => {\n        axios.post(UrlService.resetPasswordUrl(), data).then((res) => {\n            alert(res.data.message)\n        }).catch((err) => {\n            alert(err.response.data.message)\n        });\n    };\n\n\n    const password = useRef({});\n    password.current = watch('password', '');\n\n    return (\n        <>\n            <Container id='confirm-password'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Reset Password</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Please enter your new password</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>New Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        name='token'\n                                        type='hidden'\n                                        ref={register}\n                                    />\n                                    <Form.Control\n                                        autoComplete='off'\n                                        name='password'\n                                        type='password'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            minLength: {\n                                                value: 8,\n                                                message: 'Password must have at least 8 characters',\n                                            },\n                                            maxLength: {\n                                                value: 20,\n                                                message:\n                                                    'Password must have less than 20 characters',\n                                            },\n                                        })}\n                                        required\n                                        placeholder='Enter password'\n                                    />\n                                    {errors.password && (\n                                        <p style={{ color: 'red' }}>{errors.password.message}</p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className='justify-content-center mb-3'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text'>\n                                <Form.Label className='form-label'>Confirm Password</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        required\n                                        placeholder='Confirm Password'\n                                        name='password_confirmation'\n                                        type='password'\n                                        ref={register({\n                                            validate: (value) =>\n                                                value === password.current ||\n                                                'The passwords do not match',\n                                        })}\n                                    />\n                                    {errors.password_repeat && (\n                                        <p style={{ color: 'red' }}>\n                                            {errors.password_repeat.message}\n                                        </p>\n                                    )}\n                                    <BsLockFill className='input-icon'></BsLockFill>\n                                </div>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <br></br>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='confirm-password-button' variant='white' type='submit'>\n                                Reset Password\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default ConfirmPassword;\n","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/ConfirmEmail.js",["108","109","110"],"import React from 'react';\nimport './Authentication.css';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { BsFillEnvelopeFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport UrlService from './services/UrlService';\n\nconst ConfirmEmail = () => {\n    const { register, handleSubmit, errors } = useForm({\n        criteriaMode: 'all',\n    });\n\n    const onSubmit = (data) => {\n        axios.post(UrlService.forgotUrl(), data).then((res) => {\n            console.log(res);\n            alert(res.data.message)\n        }).catch((err) => {\n            alert(err.response.data.message)\n        });\n    };\n\n    return (\n        <>\n            <Container id='confirm-email'>\n                <Row className='justify-content-center'>\n                    <p className='form-title'>Reset Password</p>\n                </Row>\n                <Row className='justify-content-center paragraph'>\n                    <p className='mb-5 form-subtitle'>Please enter your email</p>\n                </Row>\n                <Form fluid='md' onSubmit={handleSubmit(onSubmit)}>\n                    <Row className='justify-content-center'>\n                        <Col lg={5} md={8} sm={10} xs={11}>\n                            <Form.Group className='label-text' controlId='formBasicEmail'>\n                                <Form.Label className='form-label'>Email</Form.Label>\n                                <div className='input-field'>\n                                    <Form.Control\n                                        autoComplete='off'\n                                        ref={register({\n                                            required: 'This is required.',\n                                            pattern: {\n                                                value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                                                message: 'Invalid Email Address',\n                                            },\n                                        })}\n                                        name='email'\n                                        className='from-control'\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        required\n                                    />\n                                    <ErrorMessage\n                                        errors={errors}\n                                        name='email'\n                                        render={({ messages }) => {\n                                            return messages\n                                                ? Object.entries(messages).map(\n                                                    ([type, message]) => (\n                                                        <p style={{ color: 'red' }} key={type}>\n                                                            {message}\n                                                        </p>\n                                                    )\n                                                )\n                                                : null;\n                                        }}\n                                    />\n                                    <BsFillEnvelopeFill className='input-icon' />\n                                </div>\n                                <Form.Text className='text-muted'></Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <br></br>\n                    <br></br>\n                    <Row className='mb-4'>\n                        <Col style={{ textAlign: 'center' }}>\n                            <Button className='confirm-email-button' variant='white' type='submit'>\n                                Send Password Reset Link\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    );\n};\n\nexport default ConfirmEmail;\n","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/services/UrlService.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/randomizer/App.js",["111","112","113"],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/randomizer/InformationRandomizer.js",["114"],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/component/App.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/SideMenu.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/randomizer/Nav.js",["115","116","117","118","119","120","121"],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/randomizer/Body.js",["122","123","124","125","126"],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/component/ButtonPanel.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/component/Display.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/logic/calculate.js",["127","128"],"import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If the length is over 9 prevent input from the user \n\n    if (obj.next?.length > 9)\n      return;\n\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.total != 0) {\n      const result = parseFloat(obj.total) / 100;\n      return {\n        total: result,\n        next: parseFloat(obj.next) / 100,\n        operation: null\n\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === 'mc') {\n    return {\n      memory: null\n    };\n  }\n  if (buttonName === 'mr') {\n\n    return {\n\n      total: obj.memory\n    };\n  }\n  if (buttonName === 'm-') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: \"-\" + obj.next\n    };\n  }\n  if (buttonName === 'm+') {\n    if (obj.next === null) {\n      obj.next = obj.total\n    }\n    return {\n      memory: obj.next\n    };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"-/+\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n\n\n\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/component/Button.js",[],"/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/logic/operate.js",["129"],"import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"÷\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\n  let temp = 0;\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"%\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"÷\") {\n    if (two == \"0\") {\n      \n      return \"error\";\n    } else {\n      temp = one.div(two).toFixed(3);\n      return temp.toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","/Users/cheakimhokmao/Desktop/cs313_team_one/src/components/basicCal/logic/isNumber.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":58,"column":63,"nodeType":"136","messageId":"137","endLine":58,"endColumn":64,"suggestions":"138"},{"ruleId":"134","severity":1,"message":"135","line":58,"column":79,"nodeType":"136","messageId":"137","endLine":58,"endColumn":80,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"135","line":62,"column":63,"nodeType":"136","messageId":"137","endLine":62,"endColumn":64,"suggestions":"140"},{"ruleId":"134","severity":1,"message":"135","line":62,"column":79,"nodeType":"136","messageId":"137","endLine":62,"endColumn":80,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":14},{"ruleId":"142","severity":1,"message":"146","line":1,"column":25,"nodeType":"144","messageId":"145","endLine":1,"endColumn":33},{"ruleId":"142","severity":1,"message":"147","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":28},{"ruleId":"142","severity":1,"message":"148","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":45,"column":63,"nodeType":"136","messageId":"137","endLine":45,"endColumn":64,"suggestions":"149"},{"ruleId":"134","severity":1,"message":"135","line":45,"column":79,"nodeType":"136","messageId":"137","endLine":45,"endColumn":80,"suggestions":"150"},{"ruleId":"142","severity":1,"message":"151","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"152","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":19},{"ruleId":"142","severity":1,"message":"153","line":4,"column":26,"nodeType":"144","messageId":"145","endLine":4,"endColumn":29},{"ruleId":"142","severity":1,"message":"148","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":14},{"ruleId":"142","severity":1,"message":"154","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":21},{"ruleId":"142","severity":1,"message":"155","line":1,"column":23,"nodeType":"144","messageId":"145","endLine":1,"endColumn":38},{"ruleId":"142","severity":1,"message":"152","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":19},{"ruleId":"142","severity":1,"message":"153","line":2,"column":21,"nodeType":"144","messageId":"145","endLine":2,"endColumn":24},{"ruleId":"142","severity":1,"message":"156","line":2,"column":31,"nodeType":"144","messageId":"145","endLine":2,"endColumn":40},{"ruleId":"142","severity":1,"message":"157","line":2,"column":42,"nodeType":"144","messageId":"145","endLine":2,"endColumn":45},{"ruleId":"142","severity":1,"message":"148","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":14},{"ruleId":"142","severity":1,"message":"155","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":32},{"ruleId":"142","severity":1,"message":"158","line":2,"column":28,"nodeType":"144","messageId":"145","endLine":2,"endColumn":32},{"ruleId":"142","severity":1,"message":"156","line":2,"column":34,"nodeType":"144","messageId":"145","endLine":2,"endColumn":43},{"ruleId":"142","severity":1,"message":"159","line":2,"column":45,"nodeType":"144","messageId":"145","endLine":2,"endColumn":58},{"ruleId":"142","severity":1,"message":"160","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":17},{"ruleId":"142","severity":1,"message":"161","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":11},{"ruleId":"162","severity":1,"message":"163","line":56,"column":19,"nodeType":"164","messageId":"165","endLine":56,"endColumn":21},{"ruleId":"162","severity":1,"message":"166","line":20,"column":13,"nodeType":"164","messageId":"165","endLine":20,"endColumn":15},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["169","170"],["171","172"],["173","174"],["175","176"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'BsFillEnvelopeFill' is defined but never used.","'Link' is defined but never used.",["177","178"],["179","180"],"'react' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'useCallback' is defined but never used.","'useLayoutEffect' is defined but never used.","'ListGroup' is defined but never used.","'Tab' is defined but never used.","'Card' is defined but never used.","'ListGroupItem' is defined but never used.","'useForm' is defined but never used.","'Big' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"messageId":"181","fix":"182","desc":"183"},{"messageId":"184","fix":"185","desc":"186"},{"messageId":"181","fix":"187","desc":"183"},{"messageId":"184","fix":"188","desc":"186"},{"messageId":"181","fix":"189","desc":"183"},{"messageId":"184","fix":"190","desc":"186"},{"messageId":"181","fix":"191","desc":"183"},{"messageId":"184","fix":"192","desc":"186"},{"messageId":"181","fix":"193","desc":"183"},{"messageId":"184","fix":"194","desc":"186"},{"messageId":"181","fix":"195","desc":"183"},{"messageId":"184","fix":"196","desc":"186"},"removeEscape",{"range":"197","text":"198"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"199","text":"200"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"201","text":"198"},{"range":"202","text":"200"},{"range":"203","text":"198"},{"range":"204","text":"200"},{"range":"205","text":"198"},{"range":"206","text":"200"},{"range":"207","text":"198"},{"range":"208","text":"200"},{"range":"209","text":"198"},{"range":"210","text":"200"},[2275,2276],"",[2275,2275],"\\",[2291,2292],[2291,2291],[2284,2285],[2284,2284],[2300,2301],[2300,2300],[1946,1947],[1946,1946],[1962,1963],[1962,1962]]
>>>>>>> f7560ffe5f994814798622a0a2c096767c7e8d5e
